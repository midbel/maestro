# variable declaration
buildir = bin
pkgdir  = "var/deb"
binname = demo
servers = "192.168.67.181" "192.168.67.236"

# meta declaration
.ALL       = verify test build
.HELP      = <<HELP
an heredoc starts with a double left arrow and an uppercase string
prefix. it ends with the same uppercase string prefix.

blank lines can be written in a heredoc and will kept as is in the
resulting string.

heredoc are very helpfull to write help text of the maestro file and
the commands that are defined.

thanks for reading and enjoy maestro!
HELP
.DEFAULT   = build
.PATH      =
.ECHO      = true
# .DUPLICATE = error|append|replace (default replace)
.VERSION = "1.0.0"
.AUTHOR  = "midbel@midbel.org"

# includes
# include (
# 	tmp/file1.mf
# 	tmp/file2.mf
# )
include "data/include.mf"

# export (
# 	IDENT = ""
# 	IDENT = ""
# )
# delete IDENT

# aliases
alias buildtest = go build -o bin/test cmd/test/main.go
alias (
	builtest1 = go build -o bin/test1 cmd/test1/main.go
	builtest2 = go build -o bin/test2 cmd/test2/main.go
)

# scripts
# action([property...]): dependency([args...]),... {
# 	[script]
# }

build(short="build binary", tag=build, error=raise): {
	echo "building main binary into ${buildir}"
	go build -trimpath -o ${builddir}/${binary} cmd/${binary}/main.go
}

test(short="run test", tag=build, error=discard) {
	echo "testing current directory"
	go test -v -coverprofile=cover.out
}

verify(short="check source code and reformat it", tag=verify, error=discard): {
	echo "running gofmt"
	gofmt -w -s .
	echo "running go vet"

 	go vet
}

clean(short="remove temporary files", tag=verify): {
	rm -rf tmp/*
	rm -rf ${buildir}/*
	rm -rf ${pkgdir}/*
}

deploy(short="deploy binary on production server", tag=build): {
	scp
}

package(short="create deb/rpm package from binary", tag=build): {
	mkdir -pf ${pkgdir}
	packit build -k deb -d ${pkgdir} ${manifest}
	packit build -k rpm -d ${pkgdir} ${manifest}
}
