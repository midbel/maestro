.VERSION = "0.1.1"
.DEFAULT = build
.ALL     = test verify build
.HELP    = <<HELP
simple is a sample maestro file that can be used for any Go project.
It provides commands to automatize building, checking and testing
your Go project.

It has also some commands to give statistics on the status of the
project such as number of remaining todos, line of codes and others.
HELP

maestro = maestro
tish    = tish
bindir  = bin
cover   = "cover.out"

package = "github.com/midbel/maestro"

test(
	short = "run test in current directory",
	tag   = build test,
): {
	@go clean -testcache
	@go test -cover $package
	@go test -cover "$package/shlex"
	@go test -cover "$package/shell"
}

build(
	short = "build binaries",
	tag   = build,
	alias = compile,
): test, verify {
	rm -f ${bindir,,}/${maestro,,}
	rm -f ${bindir,,}/${tish,,}

	buildoptions = "-v" "-trimpath"

	echo "build ${maestro,,} in ${bindir,,}/${maestro,,}"
	go build ${buildoptions} -o ${bindir,,}/${maestro,,} cmd/${maestro,,}/main.go

	echo "build ${tish,,} in ${bindir,,}/${tish,,}"
	go build ${buildoptions} -o ${bindir,,}/${tish,,} cmd/${tish,,}/main.go
}

verify(
	short = "verify code",
	tag   = "build" "verify",
	alias = vet,
): {
	echo "run vet on $package"
	@go vet $package
	echo "run vet on $package/shell"
	@go vet "$package/shell"
	echo "run vet on $package/shlex"
	@go vet "$package/shlex"
}

commit(
	short = "commit changes and push to remote",
	tag   = build,
): {
	gofmt -w -s .
	git commit -am $1
	git push
}

loc(
	short = "count number of LoC",
	tag   = "info" "verify",
): {
	total = $(find -type f -name "*go" -exec cat {} \; | egrep -v '^$' | wc -l)
	echo "${total:>:5} lines of code"
}

todo(
	short = "count number of remaining todos in code",
	tag   = "info" "verify",
	options = (
		short = s,
		long  = show,
		help  = "print the line with the todo",
		flag  = true,
	)
): {
	total = $(find -type f -name "*go" -exec cat {} \; | grep 'TODO' | wc -l)
	echo "${total:>:5} remaining todos"
	$show && grep 'TODO' *go shlex/*go shell/*go | cut -f 3 -d : | awk '{$1=$1};1'
}

count(
	short = "count LOC and todos",
	tag   = "info" "verify",
): {
	loc
	todo
}
