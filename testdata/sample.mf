# a comment

about = <<HELP
demo help text

heredoc accepts multiple lines

blank lines are kept as is!
HELP

.AUTHOR       = midbel
.EMAIL        = noreply@midbel.org
.VERSION      = 0.1.0
.HELP         = $about
.ALL          = action1 action2
.DEFAULT      = action2
.SSH_USER     = test
.SSH_PASSWORD = "tmp123!"

single   = foobar
multiple = foo bar
replace  = pre-${single}-post prefix-${multiple}-suffix

dquote = "print ${single} in string"
squote = 'print ${single} in string'

obj1 = (
	prop1 = value1, # a comment after value should be accepted
	prop2 = value2,
	prop3 = value3 value4 $single,
)
obj2 = (prop4 = value4, prop5 = value5)

export (
	FOO    = foo # a comment after export should be accepted
	BAR    = bar
	FOOBAR = $single
)

tmpdir = /tmp
incl   = "include"

include /var/maestro/definition.mf?

include (
	$tmpdir/${incl}1.mf?
	$tmpdir/${incl}2.mf?
)

alias print = echo

alias (
	tcp  = netstat -tanp
	run  = ps -aux
	list = ls -l
)

action1(short="basic command", tag=demo, alias=aa1): {
	print $single
	print $multiple
}

action2(
	short = "basic command", # a comment after property should be accepted
	tag   = demo test,
	alias = aa2,
	user  = nobody,
	group = nobody,
): *dep1, ?dep2&, dep3("-a" "-b" arg1 arg2)& {
	# this line will be the help of the command
	#
	# blank lines will be kept
	#
	#
	# multiple blank lines will be merge into one single
	# blank line
	#
	# enjoy
	@echo $single
	@echo $multiple

	.repeat("$tmpdir/file", arg1, arg2, $single) {
		@echo <var>
	}
	.sequence{
		echo line1
		echo line2
	}
}

action3(
	short   = "basic command",
	tag     = "demo",
	retry   = 10,
	timeout = "10ms",
	options = (
		short = "a",
		long  = "all",
		flag  = true,
	), (
		short    = b,
		long     = bind,
		default  = "localhost:22",
		required =  true,
		check    = notempty ipport not(oneof("localhost:22" ":22" "0.0.0.0:22")),
	),
	args = arg1 arg2(file),
): {
	$all && echo $bind \
		|| echo "bind not set"
}

%hidden(short="hidden command", tag = default): {}

delete single multiple
